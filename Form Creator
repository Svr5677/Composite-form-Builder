// File: package.json
{
  "name": "form-wizard-advanced",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "framer-motion": "^10.16.4"
  },
  "devDependencies": {
    "@types/react": "^18.2.7",
    "@types/react-dom": "^18.2.4",
    "autoprefixer": "^10.4.17",
    "postcss": "^8.4.24",
    "tailwindcss": "^3.3.2",
    "typescript": "^5.2.2",
    "vite": "^5.0.0"
  }
}

// File: vite.config.ts
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';

export default defineConfig({
  plugins: [react()],
  server: {
    port: 5173
  }
});

// File: tailwind.config.ts
import type { Config } from 'tailwindcss';

const config: Config = {
  content: [
    './index.html',
    './src/**/*.{js,ts,jsx,tsx}'
  ],
  theme: {
    extend: {}
  },
  plugins: []
};

export default config;

// File: postcss.config.cjs
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {}
  }
};

// File: index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Advanced Form Wizard</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>

// File: src/main.tsx
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import './index.css';

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// File: src/index.css
@tailwind base;
@tailwind components;
@tailwind utilities;

// File: src/App.tsx
import React, { useState } from 'react';
import { motion } from 'framer-motion';
import WelcomePage from './pages/WelcomePage';
import FormWizard from './pages/FormWizard';

const App = () => {
  const [started, setStarted] = useState(false);

  return (
    <div className="min-h-screen bg-gray-100 text-gray-800 p-4">
      {!started ? (
        <WelcomePage onStart={() => setStarted(true)} />
      ) : (
        <FormWizard />
      )}
    </div>
  );
};

export default App;

// File: src/pages/WelcomePage.tsx
import React from 'react';
import { motion } from 'framer-motion';

interface Props {
  onStart: () => void;
}

const WelcomePage: React.FC<Props> = ({ onStart }) => {
  return (
    <motion.div 
      className="text-center mt-20"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 1 }}
    >
      <h1 className="text-4xl font-bold mb-4">Welcome to Advanced Form Wizard</h1>
      <p className="mb-6 text-lg">Click below to start filling your form with customization options.</p>
      <button 
        onClick={onStart}
        className="bg-blue-600 text-white px-6 py-2 rounded-full hover:bg-blue-700"
      >
        Start Now
      </button>
    </motion.div>
  );
};

export default WelcomePage;

// File: src/pages/FormWizard.tsx
import React, { useState } from 'react';

const steps = ["Personal Info", "Details", "Customize", "Review"];

const FormWizard = () => {
  const [step, setStep] = useState(0);
  const [formData, setFormData] = useState({ name: '', email: '', extra: '' });

  const next = () => setStep((prev) => Math.min(prev + 1, steps.length - 1));
  const prev = () => setStep((prev) => Math.max(prev - 1, 0));

  const updateField = (field: string, value: string) => {
    setFormData((prev) => ({ ...prev, [field]: value }));
  };

  return (
    <div className="max-w-xl mx-auto mt-10 bg-white p-6 rounded-xl shadow-md">
      <h2 className="text-2xl font-semibold mb-4">Step {step + 1}: {steps[step]}</h2>

      {step === 0 && (
        <>
          <input 
            className="border p-2 w-full mb-3"
            placeholder="Name"
            value={formData.name}
            onChange={(e) => updateField('name', e.target.value)}
          />
          <input 
            className="border p-2 w-full mb-3"
            placeholder="Email"
            value={formData.email}
            onChange={(e) => updateField('email', e.target.value)}
          />
        </>
      )}

      {step === 1 && (
        <textarea 
          className="border p-2 w-full mb-3"
          placeholder="More details"
          value={formData.extra}
          onChange={(e) => updateField('extra', e.target.value)}
        />
      )}

      {step === 2 && (
        <p className="text-gray-600">Customize options will appear here.</p>
      )}

      {step === 3 && (
        <div className="space-y-2">
          <p><strong>Name:</strong> {formData.name}</p>
          <p><strong>Email:</strong> {formData.email}</p>
          <p><strong>Details:</strong> {formData.extra}</p>
        </div>
      )}

      <div className="flex justify-between mt-6">
        <button 
          onClick={prev}
          disabled={step === 0}
          className="px-4 py-2 bg-gray-300 rounded disabled:opacity-50"
        >Back</button>
        {step < steps.length - 1 ? (
          <button 
            onClick={next}
            className="px-4 py-2 bg-blue-500 text-white rounded"
          >Next</button>
        ) : (
          <button 
            onClick={() => alert("Form submitted!")}
            className="px-4 py-2 bg-green-600 text-white rounded"
          >Submit</button>
        )}
      </div>
    </div>
  );
};

export default FormWizard;
